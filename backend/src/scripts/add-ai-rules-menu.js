const { PrismaClient } = require('@prisma/client');
const { v4: uuidv4 } = require('uuid');

const prisma = new PrismaClient();

async function addAIRulesMenuItem() {
  try {
    console.log('üöÄ Agregando √≠tem de men√∫ "Reglas de IA"...\n');

    // Verificar si ya existe
    const existingItem = await prisma.menu_items.findFirst({
      where: {
        url: '/ai-rules'
      }
    });

    if (existingItem) {
      console.log('‚úÖ El √≠tem de men√∫ ya existe:');
      console.log(`   ID: ${existingItem.id}`);
      console.log(`   T√≠tulo: ${existingItem.title}`);
      console.log(`   URL: ${existingItem.url}`);
      console.log(`   Activo: ${existingItem.isActive}\n`);
      return;
    }

    // Obtener el orderIndex m√°s alto actual
    const maxOrderItem = await prisma.menu_items.findFirst({
      where: {
        parentId: null // Solo √≠tems de nivel superior
      },
      orderBy: {
        orderIndex: 'desc'
      }
    });

    const nextOrderIndex = (maxOrderItem?.orderIndex || 0) + 1;

    // Crear el nuevo √≠tem
    const newMenuItem = await prisma.menu_items.create({
      data: {
        id: uuidv4(),
        title: 'Reglas de IA',
        icon: 'Sparkles',
        url: '/ai-rules',
        description: 'Crea reglas de negocio usando lenguaje natural con inteligencia artificial',
        orderIndex: nextOrderIndex,
        isActive: true,
        requiresPermission: null,
        superuserOnly: false,
        tenantId: null, // Disponible para todos los tenants
        createdAt: new Date(),
        updatedAt: new Date(),
        createdBy: 'system',
        updatedBy: 'system'
      }
    });

    console.log('‚úÖ √çtem de men√∫ creado exitosamente:');
    console.log(`   ID: ${newMenuItem.id}`);
    console.log(`   T√≠tulo: ${newMenuItem.title}`);
    console.log(`   √çcono: ${newMenuItem.icon}`);
    console.log(`   URL: ${newMenuItem.url}`);
    console.log(`   Orden: ${newMenuItem.orderIndex}`);
    console.log(`   Descripci√≥n: ${newMenuItem.description}`);
    console.log(`   Activo: ${newMenuItem.isActive}\n`);

    console.log('üéâ ¬°Listo! El men√∫ ahora incluye "Reglas de IA"');
    console.log('üì± Recarga la aplicaci√≥n para ver el nuevo √≠tem en el men√∫.\n');

  } catch (error) {
    console.error('‚ùå Error agregando √≠tem de men√∫:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

addAIRulesMenuItem();
