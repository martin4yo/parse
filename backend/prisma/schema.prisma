generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ai_prompts {
  id          String    @id
  clave       String
  nombre      String
  descripcion String?
  prompt      String
  variables   Json?
  activo      Boolean   @default(true)
  version     Int       @default(1)
  motor       String?
  tipo        String?   @default("EXTRACTOR_SIMPLE")
  vecesUsado  Int       @default(0)
  ultimoUso   DateTime?
  tasaExito   Decimal?
  tenantId    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  createdBy   String?
  updatedBy   String?
  tenants     tenants?  @relation(fields: [tenantId], references: [id])

  @@unique([clave, tenantId])
  @@index([activo])
  @@index([clave])
  @@index([motor])
  @@index([tenantId])
  @@index([tipo])
}

model ai_provider_configs {
  id                String   @id
  tenantId          String?
  provider          String
  apiKeyEncrypted   String?
  modelo            String?
  maxRequestsPerDay Int?
  config            Json?
  activo            Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  tenants           tenants? @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, provider])
  @@index([activo])
  @@index([provider])
  @@index([tenantId])
}

model atributos {
  id               String             @id
  codigo           String
  descripcion      String
  activo           Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  tenantId         String?
  tenants          tenants?           @relation(fields: [tenantId], references: [id])
  valores_atributo valores_atributo[]

  @@unique([codigo, tenantId])
  @@index([activo])
  @@index([tenantId])
}

model documento_impuestos {
  id                    String                @id
  documentoId           String
  tipo                  String                @db.VarChar(50)
  descripcion           String                @db.VarChar(200)
  alicuota              Decimal?              @db.Decimal(5, 2)
  baseImponible         Decimal?              @db.Decimal(15, 2)
  importe               Decimal               @db.Decimal(15, 2)
  tenantId              String
  createdAt             DateTime              @default(now())
  documentos_procesados documentos_procesados @relation(fields: [documentoId], references: [id], onDelete: Cascade)
  tenants               tenants               @relation(fields: [tenantId], references: [id])

  @@index([documentoId])
  @@index([tenantId])
  @@index([tipo])
}

model documento_lineas {
  id                    String                @id
  documentoId           String
  numero                Int
  descripcion           String                @db.VarChar(500)
  codigoProducto        String?               @db.VarChar(100)
  cantidad              Decimal               @db.Decimal(10, 3)
  unidad                String?               @db.VarChar(100)
  precioUnitario        Decimal               @db.Decimal(15, 4)
  subtotal              Decimal               @db.Decimal(15, 2)
  alicuotaIva           Decimal?              @db.Decimal(5, 2)
  importeIva            Decimal?              @db.Decimal(15, 2)
  totalLinea            Decimal               @db.Decimal(15, 2)
  tenantId              String
  createdAt             DateTime              @default(now())
  documentos_procesados documentos_procesados @relation(fields: [documentoId], references: [id], onDelete: Cascade)
  tenants               tenants               @relation(fields: [tenantId], references: [id])

  @@index([documentoId])
  @@index([tenantId])
}

model documentos_procesados {
  id                        String                @id
  nombreArchivo             String
  tipoArchivo               String
  rutaArchivo               String
  fechaProcesamiento        DateTime              @default(now())
  estadoProcesamiento       String                @default("procesando")
  datosExtraidos            Json?
  fechaExtraida             DateTime?
  importeExtraido           Decimal?
  cuitExtraido              String?
  numeroComprobanteExtraido String?
  observaciones             String?
  usuarioId                 String
  tipo                      String                @default("documento")
  tenantId                  String
  createdAt                 DateTime              @default(now())
  updatedAt                 DateTime
  caeExtraido               String?
  cuponExtraido             String?
  exentoExtraido            Decimal?
  netoGravadoExtraido       Decimal?
  impuestosExtraido         Decimal?
  razonSocialExtraida       String?
  tipoComprobanteExtraido   String?
  modeloIA                  String?
  exportado                 Boolean               @default(false)
  fechaExportacion          DateTime?
  documento_impuestos       documento_impuestos[]
  documento_lineas          documento_lineas[]
  tenants                   tenants               @relation(fields: [tenantId], references: [id])
  users                     users                 @relation(fields: [usuarioId], references: [id])

  @@index([tenantId])
  @@index([tipo])
  @@index([exportado])
}

model menu_items {
  id                 String       @id
  parentId           String?
  title              String       @db.VarChar(100)
  icon               String       @db.VarChar(50)
  url                String?      @db.VarChar(255)
  description        String?      @db.VarChar(500)
  orderIndex         Int          @default(0)
  isActive           Boolean      @default(true)
  requiresPermission String?      @db.VarChar(100)
  superuserOnly      Boolean      @default(false)
  tenantId           String?
  createdAt          DateTime     @default(now())
  updatedAt          DateTime
  createdBy          String?
  updatedBy          String?
  menu_items         menu_items?  @relation("menu_itemsTomenu_items", fields: [parentId], references: [id], onDelete: Cascade)
  other_menu_items   menu_items[] @relation("menu_itemsTomenu_items")
  tenants            tenants?     @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([isActive])
  @@index([orderIndex])
  @@index([parentId])
  @@index([superuserOnly])
  @@index([tenantId])
}

model parametros_maestros {
  id              Int      @id @default(autoincrement())
  codigo          String
  nombre          String
  descripcion     String?
  tipo_campo      String
  valor_padre     String?
  orden           Int      @default(1)
  activo          Boolean  @default(true)
  tenantId        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime
  parametros_json Json?
  tenants         tenants? @relation(fields: [tenantId], references: [id])

  @@unique([tipo_campo, codigo])
  @@index([tenantId])
}

model parametros_relaciones {
  id          Int      @id @default(autoincrement())
  campo_padre String
  campo_hijo  String
  descripcion String?
  activo      Boolean  @default(true)
  tenantId    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  tenants     tenants? @relation(fields: [tenantId], references: [id])

  @@unique([campo_padre, campo_hijo, tenantId])
  @@index([tenantId])
}

model plan_features {
  id        String   @id
  planId    String
  feature   String
  config    Json?
  createdAt DateTime @default(now())
  planes    planes   @relation(fields: [planId], references: [id], onDelete: Cascade)

  @@unique([planId, feature])
  @@index([feature])
  @@index([planId])
}

model planes {
  id            String          @id
  codigo        String          @unique
  nombre        String
  descripcion   String?
  precio        Decimal?        @db.Decimal(10, 2)
  activo        Boolean         @default(true)
  orden         Int             @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime
  plan_features plan_features[]
  tenants       tenants[]

  @@index([activo])
  @@index([codigo])
}

model processing_jobs {
  id             String    @id
  type           String
  status         String
  progress       Int       @default(0)
  totalItems     Int?
  processedItems Int?
  message        String?
  userId         String
  parameters     Json
  result         Json?
  error          String?
  startedAt      DateTime?
  completedAt    DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime

  @@index([createdAt])
  @@index([status])
  @@index([type])
  @@index([userId])
}

model profiles {
  id          String   @id
  codigo      String   @unique
  descripcion String
  activo      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  users       users[]
}

model reglas_ejecuciones {
  id             String         @id
  reglaId        String
  contexto       String
  entrada        Json
  salida         Json?
  exitosa        Boolean
  mensaje        String?
  duracionMs     Int?
  createdAt      DateTime       @default(now())
  reglas_negocio reglas_negocio @relation(fields: [reglaId], references: [id])

  @@index([contexto])
  @@index([createdAt])
  @@index([reglaId])
}

model reglas_negocio {
  id                 String               @id
  codigo             String               @unique
  nombre             String
  descripcion        String?
  tipo               String
  activa             Boolean              @default(true)
  prioridad          Int                  @default(100)
  version            Int                  @default(1)
  fechaVigencia      DateTime?
  configuracion      Json
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  createdBy          String?
  updatedBy          String?
  tenantId           String?
  reglas_ejecuciones reglas_ejecuciones[]
  tenants            tenants?             @relation(fields: [tenantId], references: [id])

  @@index([prioridad])
  @@index([tipo, activa])
}

model sync_api_keys {
  id             String    @id
  tenantId       String
  nombre         String
  key            String    @unique
  keyPreview     String
  permisos       Json      @default("{}")
  activo         Boolean   @default(true)
  ultimoUso      DateTime?
  ultimoUsoIp    String?
  vecesUtilizada Int       @default(0)
  expiraEn       DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime
  createdBy      String?
  tenants        tenants   @relation(fields: [tenantId], references: [id])

  @@index([activo])
  @@index([key])
  @@index([tenantId])
}

model sync_configurations {
  id                  String      @id
  tenantId            String      @unique
  sqlServerHost       String
  sqlServerPort       Int         @default(1433)
  sqlServerDatabase   String
  sqlServerUser       String
  sqlServerPassword   String
  configuracionTablas Json
  version             Int         @default(1)
  ultimaModificacion  DateTime
  activo              Boolean     @default(true)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime
  tenants             tenants     @relation(fields: [tenantId], references: [id])
  sync_logs           sync_logs[]

  @@index([activo])
  @@index([tenantId])
}

model sync_logs {
  id                  String               @id
  tenantId            String
  configId            String?
  direccion           String
  tabla               String
  fase                String?
  ejecutadoEn         String?
  estado              String
  registrosAfectados  Int?
  mensaje             String?
  errorDetalle        String?
  duracionMs          Int?
  metadatos           Json?
  fechaInicio         DateTime
  fechaFin            DateTime?
  createdAt           DateTime             @default(now())
  sync_configurations sync_configurations? @relation(fields: [configId], references: [id])
  tenants             tenants              @relation(fields: [tenantId], references: [id])

  @@index([configId])
  @@index([estado])
  @@index([tabla])
  @@index([tenantId, createdAt])
}

model tenants {
  id                    String                  @id
  slug                  String                  @unique
  nombre                String
  cuit                  String                  @unique
  razonSocial           String?
  direccion             String?
  telefono              String?
  email                 String?
  planId                String?
  activo                Boolean                 @default(true)
  esDefault             Boolean                 @default(false)
  fechaCreacion         DateTime                @default(now())
  fechaVencimiento      DateTime?
  configuracion         Json                    @default("{}")
  limites               Json                    @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime
  ai_prompts            ai_prompts[]
  ai_provider_configs   ai_provider_configs[]
  atributos             atributos[]
  documento_impuestos   documento_impuestos[]
  documento_lineas      documento_lineas[]
  documentos_procesados documentos_procesados[]
  menu_items            menu_items[]
  parametros_maestros   parametros_maestros[]
  parametros_relaciones parametros_relaciones[]
  reglas_negocio        reglas_negocio[]
  sync_api_keys         sync_api_keys[]
  sync_configurations   sync_configurations?
  sync_logs             sync_logs[]
  planes                planes?                 @relation(fields: [planId], references: [id])
  users                 users[]

  @@index([activo])
  @@index([cuit])
  @@index([planId])
  @@index([slug])
}

model user_atributos {
  id               String           @id
  userId           String
  valorAtributoId  String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime
  users            users            @relation(fields: [userId], references: [id], onDelete: Cascade)
  valores_atributo valores_atributo @relation(fields: [valorAtributoId], references: [id], onDelete: Cascade)

  @@unique([userId, valorAtributoId])
  @@index([userId])
  @@index([valorAtributoId])
}

model users {
  id                        String                  @id
  email                     String                  @unique
  password                  String?
  nombre                    String
  apellido                  String
  activo                    Boolean                 @default(true)
  profileId                 String?
  tenantId                  String?
  superuser                 Boolean                 @default(false)
  emailVerified             Boolean                 @default(false)
  verificationToken         String?
  verificationExpires       DateTime?
  recibeNotificacionesEmail Boolean                 @default(false)
  googleId                  String?                 @unique
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime
  documentos_procesados     documentos_procesados[]
  user_atributos            user_atributos[]
  profiles                  profiles?               @relation(fields: [profileId], references: [id])
  tenants                   tenants?                @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
}

model valores_atributo {
  id             String           @id
  codigo         String
  descripcion    String
  atributoId     String
  activo         Boolean          @default(true)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  user_atributos user_atributos[]
  atributos      atributos        @relation(fields: [atributoId], references: [id], onDelete: Cascade)

  @@unique([atributoId, codigo])
  @@index([activo])
  @@index([atributoId])
}
