// Test para verificar quÃ© devuelve REMOVE_LEADING_ZEROS

function testRemoveLeadingZeros() {
  console.log('ðŸ§ª Probando transformaciÃ³n REMOVE_LEADING_ZEROS...\n');

  // Esta es la funciÃ³n exacta del businessRulesEngine.js
  function removeLeadingZeros(value) {
    return String(value).replace(/^0+/, '') || '0';
  }

  const testCases = [
    '0000000000000',
    '0000000000001',
    '0',
    '00',
    '000',
    '0123456789',
    '1234567890',
    '',
    null,
    undefined
  ];

  console.log('ðŸ“‹ Resultados de transformaciÃ³n:');
  testCases.forEach(testCase => {
    try {
      const result = removeLeadingZeros(testCase);
      console.log(`   "${testCase}" â†’ "${result}"`);
    } catch (error) {
      console.log(`   "${testCase}" â†’ ERROR: ${error.message}`);
    }
  });

  console.log('\nðŸŽ¯ Casos especÃ­ficos importantes:');
  console.log(`   "0000000000000" â†’ "${removeLeadingZeros('0000000000000')}"`);
  console.log(`   "0" â†’ "${removeLeadingZeros('0')}"`);
  console.log(`   "00000" â†’ "${removeLeadingZeros('00000')}"`);

  console.log('\nðŸ’¡ ExplicaciÃ³n:');
  console.log('   - replace(/^0+/, "") quita todos los ceros al inicio');
  console.log('   - Si queda vacÃ­o "", el || "0" devuelve "0"');
  console.log('   - Por tanto: cualquier cadena de solo ceros â†’ "0"');
}

testRemoveLeadingZeros();